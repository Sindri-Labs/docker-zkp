name: Build Images

on:
  push:
    branches: ["main"]
    tags:
      - "v*"
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        image: ["circom", "circomspect", "nargo", "snarkjs"]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build the Image
        run: |
          # Loop over supported platforms.
          image_name="sindrilabs/${{ matrix.image }}"
          for platform in "linux/amd64" "linux/arm/v7" "linux/arm64/v8"; do
              # Determine the custom image tag based on the platform.
              case $platform in
                  "linux/amd64") image_tag="amd64" ;;
                  "linux/arm/v7") image_tag="arm-v7" ;;
                  "linux/arm64/v8") image_tag="arm64-v8" ;;
              esac

            docker buildx build -f images/${{ matrix.image }}/Dockerfile -t "${image_name}:${image_tag}" --load images/${{ matrix.image }}/ --platform $platform
          done

      - name: Install SlimTookit
        run: |
          curl -sL https://raw.githubusercontent.com/slimtoolkit/slim/master/scripts/install-slim.sh | sudo -E bash -

      - name: Build Optimized Image
        run: |
          image_name="sindrilabs/${{ matrix.image }}"
          for image_tag in "amd64" "arm-v7" "arm64-v8"; do
            slim build --target "${image_name}:${image_tag}" \
              --tag "${image_name}:${image_tag}-optimized" \
              --http-probe=false \
              --exclude-pattern '/tmp/*' \
              --mount "./images/${{ matrix.image }}/:/sindri-project/" \
              --exec "./test.sh"
          done

      - name: Create MultiArch Image Manifest
        run: |
          image_name="sindrilabs/${{ matrix.image }}"
          docker manifest create "${image_name}:latest" \
            --amend "${image_name}:amd64-optimized" \
            --amend "${image_name}:arm-v7-optimized" \
            --amend "${image_name}:arm64-v8-optimized"

      - name: Deploy to DockerHub
        run: |
          docker push sindrilabs/${{ matrix.image }}:latest
